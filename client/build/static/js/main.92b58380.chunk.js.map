{"version":3,"sources":["components/sitewide/Header.js","components/sitewide/Navbar.js","components/blog/PostList.js","components/blog/Blog.js","components/blog/BlogPost.js","components/portfolio/Portfolio.js","components/contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","testActive","match","isExact","Navbar","isActive","activeClassName","to","PostList","props","Object","keys","posts","map","postId","post","key","title","date","category","description","initialPosts","Blog","useState","setPosts","useEffect","BlogPost","slug","useParams","Portfolio","Contact","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wUAaeA,G,6KARX,OACE,yBAAKC,UAAU,UACb,oD,GAJaC,c,MCgBrB,SAASC,EAAWC,GAClB,OAAQA,GAASA,EAAMC,UAAY,EAGtBC,M,uKAdX,OACE,yBAAKL,UAAU,UACb,kBAAC,IAAD,CAASM,SAAUJ,EAAYK,gBAAgB,aAAaC,GAAG,KAA/D,QACA,kBAAC,IAAD,CAASF,SAAUJ,EAAYK,gBAAgB,aAAaC,GAAG,cAA/D,aACA,kBAAC,IAAD,CAASF,SAAUJ,EAAYK,gBAAgB,aAAaC,GAAG,YAA/D,gB,GANaP,a,QCoBNQ,EAtBE,SAACC,GAChB,OACE,6BACE,4BACGC,OAAOC,KAAKF,EAAMG,OAAOC,KAAI,SAACC,GAC7B,IAAIC,EAAON,EAAMG,MAAME,GACvB,OACE,wBAAIE,IAAKF,GACP,yBAAKf,UAAU,iBACb,4BAAKgB,EAAKE,OACV,yCAAeF,EAAKG,KAApB,OAA6B,0BAAMnB,UAAU,gBAAgBgB,EAAKI,YAEpE,2BAAIJ,EAAKK,aACT,kBAAC,IAAD,CAAMrB,UAAU,eAAeQ,GAAE,gBAAWO,IAA5C,oBCZRO,G,MAAe,CACnB,EAAK,CACHJ,MAAO,sCACPC,KAAM,aACNC,SAAU,WACVC,YAAa,+WAEf,EAAK,CACHH,MAAO,2CACPC,KAAM,aACNC,SAAU,cACVC,YAAa,+WAEf,EAAK,CACHH,MAAO,6BACPC,KAAM,aACNC,SAAU,aACVC,YAAa,iXAwBFE,EApBF,WAAO,IAAD,EAESC,mBAASF,GAFlB,mBAEVT,EAFU,KAEHY,EAFG,KAQjB,OAJAC,qBAAU,WACRD,EAASH,KACR,IAGD,6BACE,kBAAC,EAAD,MACA,yBAAKtB,UAAU,cACb,kBAAC,EAAD,CACEa,MAAOA,OCxBFc,EAVE,WAAO,IAChBC,EAASC,cAATD,KACN,OACE,6BACE,kBAAC,EAAD,MADF,mBAEmBA,ICCRE,E,uKARX,OACE,yBAAK9B,UAAU,YAAf,kB,GAHkBC,aCUT8B,E,uKARX,OACE,yBAAK/B,UAAU,YAAf,gB,GAHgBC,aCgCP+B,MAzBf,WACE,OACE,kBAAC,IAAD,KAEE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,WCdQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnC,MACvB,2D,MCZNoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.92b58380.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './assets/header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Torquil MacLeod</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nimport './assets/navbar.css';\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <NavLink isActive={testActive} activeClassName=\"activeLink\" to=\"/\">Blog</NavLink>\r\n        <NavLink isActive={testActive} activeClassName=\"activeLink\" to=\"/portfolio\">Portfolio</NavLink>\r\n        <NavLink isActive={testActive} activeClassName=\"activeLink\" to=\"/contact\">Contact</NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction testActive(match) {\r\n  return (match && match.isExact) || false;\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nconst PostList = (props) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {Object.keys(props.posts).map((postId) => {\r\n          let post = props.posts[postId];\r\n          return (\r\n            <li key={postId}>\r\n              <div className=\"blogPostTitle\">\r\n                <h1>{post.title}</h1>\r\n                <h2>Posted on {post.date} in <span className=\"postCategory\">{post.category}</span></h2>\r\n              </div>\r\n              <p>{post.description}</p>\r\n              <Link className=\"readMoreLink\" to={`/blog/${postId}`}>Read More</Link>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Navbar } from '..';\r\nimport PostList from './PostList';\r\n\r\nimport './assets/blog.css';\r\n\r\nconst initialPosts = {\r\n  \"1\": {\r\n    title: \"All You Need To Know About Software\",\r\n    date: \"12/05/2020\",\r\n    category: \"Software\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec quis eros ante. Duis porta porttitor lorem. In hac habitasse platea dictumst. Proin accumsan, ligula blandit luctus vestibulum, dui diam consequat lacus, quis aliquet nisi orci sit amet ante. Mauris et velit elementum risus pellentesque aliquet eu eu sem. Pellentesque porta erat ut volutpat iaculis.\"\r\n  },\r\n  \"2\": {\r\n    title: \"Why Is Everyone Talking About Web Design\",\r\n    date: \"12/05/2020\",\r\n    category: \"Game Design\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec quis eros ante. Duis porta porttitor lorem. In hac habitasse platea dictumst. Proin accumsan, ligula blandit luctus vestibulum, dui diam consequat lacus, quis aliquet nisi orci sit amet ante. Mauris et velit elementum risus pellentesque aliquet eu eu sem. Pellentesque porta erat ut volutpat iaculis.\"\r\n  },\r\n  \"3\": {\r\n    title: \"The Hidden Agenda Of Cloud\",\r\n    date: \"12/05/2020\",\r\n    category: \"Web Design\",\r\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec quis eros ante. Duis porta porttitor lorem. In hac habitasse platea dictumst. Proin accumsan, ligula blandit luctus vestibulum, dui diam consequat lacus, quis aliquet nisi orci sit amet ante. Mauris et velit elementum risus pellentesque aliquet eu eu sem. Pellentesque porta erat ut volutpat iaculis.\"\r\n  }\r\n}\r\n\r\nconst Blog = () => {\r\n\r\n  const [posts, setPosts] = useState(initialPosts);\r\n\r\n  useEffect(() => {\r\n    setPosts(initialPosts);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"blogColumn\">\r\n        <PostList\r\n          posts={posts}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\nimport {\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport { Navbar } from '..';\r\n\r\nconst BlogPost = () => {\r\n  let { slug } = useParams();\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      Post Id opened: {slug}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogPost;\r\n","import React, { Component } from 'react';\r\n\r\nclass Portfolio extends Component {\r\n  render() {\r\n    return (\r\n      <div className='centered'>\r\n        Portfolio.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className='centered'>\r\n        Contact.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport { Header, Blog, Portfolio, Contact, BlogPost } from './components';\n\nfunction App() {\n  return (\n    <Router>\n      {/* Redirect to blog if at root level */}\n      <div className='App'>\n        <Header />\n        <Switch>\n          <Route exact path='/portfolio'>\n            <Portfolio />\n          </Route>\n          <Route exact path='/contact'>\n            <Contact />\n          </Route>\n          <Route path='/blog/:slug'>\n            <BlogPost />\n          </Route>\n          <Route exact path='/'>\n            <Blog />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/site.css';\n \nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}